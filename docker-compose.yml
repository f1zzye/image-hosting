services:
  backend:
    build: ./
    container_name: hosting_container
    working_dir: /image-hosting
    command: ["./commands/start_server.sh"]
    ports:
      - "8010:8000"
    volumes:
      - ./src:/image-hosting/src
      - ./commands:/image-hosting/commands
      - static_volume:/image-hosting/src/static
      - media_volume:/image-hosting/src/media
    env_file:
      - ./src/.env
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    container_name: hosting_postgres
    ports:
      - "5432:5432"
    volumes:
      - pd_data:/var/lib/postgresql/data
    env_file:
      - ./src/.env

  nginx:
    image: nginx:1.19
    container_name: hosting_nginx
    volumes:
      - static_volume:/usr/share/nginx/html/static:ro
      - media_volume:/usr/share/nginx/html/media:ro
      - ./nginx:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend

  redis:
    image: redis
    env_file:
      - ./src/.env
    restart: on-failure
    depends_on:
      - postgres

  celery:
    build: ./
    command: celery -A config.celery.app worker -l info
    restart: always
    volumes:
      - ./src:/image-hosting/src
    env_file:
      - ./src/.env
    working_dir: /image-hosting/src
    depends_on:
      - postgres
      - redis

  celerybeat:
    build: ./
    command: celery -A config.celery.app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    restart: always
    volumes:
      - ./src:/image-hosting/src
    env_file:
      - ./src/.env
    working_dir: /image-hosting/src
    depends_on:
      - postgres
      - redis

  flower:
    build: ./
    command: celery -A config.celery.app flower
    restart: always
    volumes:
      - ./src:/image-hosting/src
    env_file:
      - ./src/.env
    working_dir: /image-hosting/src
    ports:
      - 5556:5555
    depends_on:
      - celery
      - redis


volumes:
  static_volume:
  media_volume:
  pd_data: